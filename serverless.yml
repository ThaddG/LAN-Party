# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: only-lans
# app and org for use with dashboard.serverless.com
#app: your-app-name
#org: your-org-name

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
frameworkVersion: '2'

provider:
  name: aws
  logRetentionInDays: 30 # Avoid meaningless bills
  memorySize: 512
  stage: test
  versionFunctions: false
  runtime: nodejs12.x
  region: us-east-2

  # Giving users appropriate permissions to the database, parameters ,and any other resources they may need for this service
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "logs:*"
      Resource: "*"
    - Effect: "Allow"
      Action:
        - "dynamodb:*"
      Resource: "*"
    - Effect: "Allow"
      Action: "ssm:GetParameters"
      Resource: "*"
    - Effect: "Allow"
      Action: "kms:Decrypt"
      Resource: "*"

functions:
  SignUp:
    handler: API/AccountApi.signup
    events:
      - http:
          method: POST
          path: /sign_up
          cors: true

  SignIn:
    handler: API/AccountApi.signin
    events:
      - http:
          method: POST
          path: /sign_in
          cors: true

resources:
 Resources:
    users:
      Type: "AWS::DynamoDB::Table"
      Properties:
        TableName: LAN-party-User
        AttributeDefinitions:
          - AttributeName: Email
            AttributeType: S
          - AttributeName: Username 
            AttributeType: S
          - AttributeName: Password 
            AttributeType: S
          - AttributeName: Friends 
        KeySchema:
          - AttributeName: Email
            KeyType: HASH
        GlobalSecondaryIndexes:
          - IndexName: Username
            KeySchema:
              - AttributeName: Username
                KeyType: HASH
            Projection:
              ProjectionType: ALL
        BillingMode: PAY_PER_REQUEST

    games:
      Type: "AWS::DynamoDB::Table"
      Properties:
        TableName: LAN-party-Game
        AttributeDefinitions:
          - AttributeName: Name
            AttributeType: S
          - AttributeName: Genre 
            AttributeType: S
        KeySchema:
          - AttributeName: Name
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST

    parties:
      Type: "AWS::DynamoDB::Table"
      Properties:
        TableName: LAN-party-Party
        AttributeDefinitions:
          - AttributeName: Location
            AttributeType: S
          - AttributeName: Date 
            AttributeType: S
          - AttributeName: HostID 
            AttributeType: N
          - AttributeName: Status 
            AttributeType: S
          - AttributeName: Intent 
            AttributeType: S
          - AttributeName: Notes 
            AttributeType: S
        KeySchema:
          - AttributeName: ID
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST